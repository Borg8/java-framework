package borg;

import org.jetbrains.annotations.Contract;
import org.jetbrains.annotations.NotNull;

public final class _Singleton 
{
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// Public Constants
	//////////////////////////////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////////////////////////////
	// Constants
	//////////////////////////////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////////////////////////////
	// Definitions
	//////////////////////////////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////////////////////////////
	// Fields
	//////////////////////////////////////////////////////////////////////////////////////////////////

	/** single instance of _Singleton */
	private static _Singleton sInstance = null;

	//////////////////////////////////////////////////////////////////////////////////////////////////
	// Methods
	//////////////////////////////////////////////////////////////////////////////////////////////////

	@Contract(pure = true)
	private _Singleton()
	{
		// private constructor to prevent instantiation
	}

	/**
	 * @return single instance of _Singleton.
	 */
	@NotNull
	public static _Singleton getInstance()
	{
		if (sInstance == null)
		{
			// create single instance of _Singleton
			sInstance = new _Singleton();
		}

		return sInstance;
	}
}
